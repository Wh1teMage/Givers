
local EventBus = {}
EventBus.__index = EventBus

function EventBus.new()
    return setmetatable({
        _topics = {},       -- [eventName] = Signal
        _connections = {},  -- [eventName] = {connections}
        _middlewares = {},  -- —Å–ø–∏—Å–æ–∫ middleware
    }, EventBus)
end

-- üîπ –î–æ–±–∞–≤–∏—Ç—å middleware
function EventBus:AddMiddleware(fn)
    table.insert(self._middlewares, fn)
end

-- üîπ –ü–æ–ª—É—á–∏—Ç—å –∏–ª–∏ —Å–æ–∑–¥–∞—Ç—å Signal –¥–ª—è —Å–æ–±—ã—Ç–∏—è
function EventBus:_getSignal(eventName)
    if not self._topics[eventName] then
        self._topics[eventName] = {}
        self._connections[eventName] = {}
    end
    return self._topics[eventName]
end

-- üîπ –ü–æ–¥–ø–∏—Å–∫–∞
function EventBus:Connect(eventName, callback)
    local signal = self:_getSignal(eventName)
    local conn = signal:Connect(callback)

    table.insert(self._connections[eventName], conn)
    return conn
end

-- üîπ –ü–æ–¥–ø–∏—Å–∫–∞ –æ–¥–∏–Ω —Ä–∞–∑
function EventBus:Once(eventName, callback)
    local signal = self:_getSignal(eventName)
    local conn
    conn = signal:Connect(function(payload)
        conn:Disconnect()
        callback(payload)
    end)
    table.insert(self._connections[eventName], conn)
    return conn
end

-- üîπ Yield –¥–æ —Å–æ–±—ã—Ç–∏—è
function EventBus:Wait(eventName)
    local signal = self:_getSignal(eventName)
    return signal:Wait()
end

-- üîπ Fire (—Å middleware)
function EventBus:Fire(eventName, payload)
    local ctx = { name = eventName, data = payload }

    for _, mw in ipairs(self._middlewares) do
        mw(ctx) -- middleware –º–æ–∂–µ—Ç –∏–∑–º–µ–Ω–∏—Ç—å ctx.data
    end

    local signal = self:_getSignal(eventName)
    signal:Fire(ctx.data)
end

-- üîπ –£–¥–∞–ª–∏—Ç—å –≤—Å–µ –ø–æ–¥–ø–∏—Å–∫–∏ –¥–ª—è —Å–æ–±—ã—Ç–∏—è
function EventBus:DisconnectAll(eventName)
    if self._connections[eventName] then
        for _, conn in ipairs(self._connections[eventName]) do
            conn:Disconnect()
        end
        self._connections[eventName] = {}
    end
end

-- üîπ –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è —Å–æ–±—ã—Ç–∏—è
function EventBus:GetConnections(eventName)
    return self._connections[eventName] or {}
end

return EventBus
